name: Push Docker
on:
  push:
    branches:
      - main
  schedule:
    - cron: 45 23 * * 0 # https://crontab.guru/#45_23_*_*_0
env:
  arch: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x
  dockerFile: src/Dockerfile
jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - registry: docker.io
            username: jaidchen
            passwordId: dockerHubToken
          - registry: ghcr.io
            username: ${{ github.actor }}
            passwordId: GITHUB_TOKEN
    steps:
      - name: Set name
        id: nameSetter
        shell: bash
        run: |
          set -o errexit
          repoName=${{ github.event.repository.name }}
          if [ ${{ matrix.registry }} = docker.io ]; then
            imageNamePrefix=${{ matrix.username }}/
          else
            imageNamePrefix=
          fi
          printf '::set-output name=imageName::%s%s\n' $imageNamePrefix ${repoName##docker-}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.username }}
          password: ${{ secrets[matrix.passwordId] }}
      - name: Build and push Docker to ${{ matrix.registry }}
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ${{ env.dockerFile }}
          platforms: ${{ env.arch }}
          tags: ${{ steps.nameSetter.outputs.imageName }}:latest
          cache-from: type=registry,ref=${{ steps.nameSetter.outputs.imageName }}:buildcache
          cache-to: type=registry,ref=${{ steps.nameSetter.outputs.imageName }}:buildcache,mode=max